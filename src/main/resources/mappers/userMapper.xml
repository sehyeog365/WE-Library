<?xml version="1.0" encoding="UTF-8"?>

 <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.marondal.welibrary.user.dao.UserDAO">
  
  <insert id ="insertUser" parameterType="map">
  	INSERT INTO
  		`user`
  		(
  			`loginId`
		  	,`password` 
		  	, `name`
		  	, `birth`
		    , `email` 
		    , `phoneNumber`
		    , `createdAt` 
		    , `updatedAt`
  		)
  	VALUES
  		(
  		 #{loginId}
  		 , #{password}
		 , #{name}
		 , #{birth}
		 , #{email}
		 , #{phoneNumber}
		 , now()
		 , now()
		 
		 
  		)

  </insert>
  
  <!-- 중복아이디 확인(select) -->
  <select id ="selectCountloginId" parameterType="String" resultType="int">
  	SELECT
  		count(1)
  	FROM
  		`user`
  	WHERE
  		`loginId`=#{loginId}
  </select>
  
  
  <!-- 관리자 회원가입 -->
  <insert id="insertAdminUser" parameterType="map">
  		INSERT INTO
  		`user`
  		(
  			`loginId`
		  	,`password` 
		  	, `name`
		  	, `birth`
		    , `email` 
		    , `phoneNumber`
		    , `isAdmin`
		    , `createdAt` 
		    , `updatedAt`
  		)
  	VALUES
  		(
  		 #{loginId}
  		 , #{password}
		 , #{name}
		 , #{birth}
		 , #{email}
		 , #{phoneNumber}
		 , #{isAdmin}
		 , now()
		 , now()
		 
		 
  		)
  </insert>
  
  <!-- 관리자 회원가입 인증번호 일치 확인(select) -->
  <select id="selectcertificationNumber" parameterType="String" resultType="int">
  	SELECT
  		count(1)
  	FROM
  		`certificationnumber`
  	WHERE `certificationNumber`
  			= #{certificationNumber};
  
  
  </select>
  
  <!-- 로그인 -->
  <select id="selectUser" parameterType="map" resultType="com.marondal.welibrary.user.model.User">
  	SELECT
  		`id`
  		,`loginId`
  		, `password`
  		, `name`
  		, `birth`
  		, `email`
  		, `phoneNumber`
  		, `isAdmin`
  		, `createdAt` 
		, `updatedAt` 
  	FROM
  		`user`
  	WHERE
  		`loginId` = #{loginId}
  		AND `password` = #{password};
  </select>
  
  <!-- id찾기 -->
  <select id="selectUserByNameBirthPhone" parameterType="map" resultType="com.marondal.welibrary.user.model.User">
  	SELECT
  		`loginId`
  	FROM
  		`user`
  	WHERE
  		`name` = #{name}
  		AND
  		`birth` = #{birth}
  		AND
  		`phoneNumber` = #{phoneNumber}
  </select>
  
  <!-- pw재발급 -->
  <update id="updatePasswordByIdNameBirthPhone" parameterType="map">
  	UPDATE
  		`user`
  	SET
  		`password` = #{password}
  	WHERE 
  		`loginId` = #{loginId}
  		AND
  		`name` = #{name}
  		AND
  		`birth` = #{birth}
  		AND
  		`phoneNumber` = #{phoneNumber}
  </update>
  
  
  
  <!-- 회원정보 수정 -->
  <update id ="updateUser" parameterType="map">
  	UPDATE
		`user`
  	SET
  		`name` =#{name}
  		, `birth` =#{birth}
  		, `email` =#{email}
  		, `phoneNumber` =#{phoneNumber}
  		, `updatedAt` = now()
  	WHERE
  		`id`=#{id}
  </update>
  
  
  
  <!-- 회원정보 한행 조회 -->
  <select id="selectUserInfo" parameterType="int" resultType="com.marondal.welibrary.user.model.User">
  	SELECT
  		`id`
  		,`loginId`
  		, `password`
  		, `name`
  		, `birth`
  		, `email`
  		, `phoneNumber`
  		, `isAdmin`
  		, `createdAt` 
		, `updatedAt` 
  	FROM
  		`user`
  	WHERE
  		`id`=#{id};
  
  </select>
  <!-- 비밀번호 확인 -->
  <select id="selectPassword" parameterType="map" resultType="int">
  	SELECT
  		count(1)
  	FROM
  		`user`
  	WHERE
  		`id` = #{id}
  		AND
  		`password`=#{password}
  </select>
  
  <!-- 비밀번호 변경 -->
  <update id="updatePassword" parameterType="map">
  	UPDATE
  		`user`
  	SET
  		`password`= #{password}
  		, `updatedAt` = now()
  	WHERE
  		`id`= #{id}
  		AND
  		`password` = #{password}
  </update>
  
  
  <!-- 회원탈퇴 -->
   <delete id ="deleteUser" parameterType="map">
   DELETE
   FROM 
   		`user`
   WHERE
		`id`= #{id}
  		AND
  		`password` = #{password}
   </delete>
  
  
  </mapper>